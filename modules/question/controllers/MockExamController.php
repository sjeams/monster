<?php

namespace app\modules\question\controllers;

use app\models\Section;
use app\models\SectionQuestion;
use app\modules\question\models\MockExam;
use yii;
use app\libs\App1Control;
class MockExamController extends App1Control {
    public $enableCsrfValidation = false;
    public $mock_model;

    public function init()
    {
        $this->mock_model = new MockExam();
        return parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * @return string
     * @throws yii\db\Exception
     * Design: By Ferre
     * 模考管理
     */
    public function actionIndex()
    {
        $page = Yii::$app->request->get('page',1);
        if(!$page) $page = 1;

        $data     = $this->mock_model->getMock($page,16);
        return $this->render('index',['content' => $data['data'],'page' => $data['pageStr']]);
    }

    /**
     * @return string
     * Design: By Ferre
     * section list
     */
    public function actionSection()
    {
        if (Yii::$app->request->isPost){
            $name = Yii::$app->request->post('questions');
            $data = $this->mock_model->getStemData($name);
            return $this->render('section', ['data' => $data]);
        }else{
            $id   = Yii::$app->request->get('id');
            $data = Section::find()->asArray()->select('id,mockExamId,createTime')->where(['mockExamId' => $id])->all();
            return $this->render('section', ['data' => $data]);
        }

    }

    /**
     * @return string
     * @throws yii\db\Exception
     * Design: By Ferre
     * 模考题目
     */
    public function actionInfo()
    {
        $page     = Yii::$app->request->get('page',1);
        if(!$page) $page = 1;
        $id       = Yii::$app->request->get('id');
        $data     = $this->mock_model->getSectionQuestions($id, $page, 10);
        return $this->render('info',['content' => $data['data'],'page' => $data['pageStr'], 'sectionId' => $id]);
    }

    /**
     * @return string
     * @throws yii\db\Exception
     * Design: By Ferre
     * 题目详情
     */
    public function actionQuestion()
    {
        $id = Yii::$app->request->get('id');
        if ($id){
            $data     = $this->mock_model->getQuestion($id);
            return $this->render('question',['content' => $data]);
        }
        die('<script>alert("没有参数");history.go(-1);</script>');
    }

    public function actionSearchQuestion()
    {
        $id        = Yii::$app->request->get('questionId');  //查询id or title
        $sectionId = Yii::$app->request->get('sectionId');   //sectionId
        $ids       = Yii::$app->request->get('ids');         //替换问题id
        if (empty($ids)) die('<script>alert("请选择替换问题");history.go(-1);</script>');
        $data      = $this->mock_model->getSearchQuestion($id);
        return $this->render('search',['data' => $data, 'sectionId' => $sectionId, 'replaceId' => $ids]);
    }

    /**
     * Design: By Ferre
     * 替换试题
     */
    public function actionReplace()
    {
        $post = Yii::$app->request->post();
        if (!$post['rep']) die('<script>alert("请选择替换题目");history.go(-1);</script>');
//        SectionQuestion::updateAll(['questionId' => 1], ['sectionId' => 37, 'questionId' => 1501]);
        $res = SectionQuestion::updateAll(['questionId' => $post['rep']], ['sectionId' => $post['sectionId'], 'questionId' => $post['replaceId']]);
        if ($res){
            $this->redirect('index');
        }else{
            die('<script>alert("替换失败");history.go(-1);</script>');
        }

    }

}
