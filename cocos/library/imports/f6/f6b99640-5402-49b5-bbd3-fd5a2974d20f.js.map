{"version":3,"sources":["assets\\Script\\scence\\scoretrump.js"],"names":["cc","Class","Component","properties","content","type","Node","person","Prefab","test_scrollView","ScrollView","test_pageView","PageView","onLoad","i","instantiate","conten","addTouchEvent","node_1","on","EventType","TOUCH_START","touchStart","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJC,IAAAA,OAAO,EAAE;AACP,iBAAS,IADF;AAEPC,MAAAA,IAAI,EAAEL,EAAE,CAACM;AAFF,KAjBD;AAsBVC,IAAAA,MAAM,EAAE;AACN,iBAAS,IADH;AAENF,MAAAA,IAAI,EAAEL,EAAE,CAACQ;AAFH,KAtBE;AA0BV;AACAC,IAAAA,eAAe,EAAE;AACf,iBAAS,IADM;AAEfJ,MAAAA,IAAI,EAAEL,EAAE,CAACU;AAFM,KA3BP;AA+BV;AACAC,IAAAA,aAAa,EAAE;AACb,iBAAS,IADI;AAEbN,MAAAA,IAAI,EAAEL,EAAE,CAACY;AAFI;AAhCL,GAHP;AA6CL;AAEAC,EAAAA,MAAM,EAAE,kBAAY;AAChB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,UAAIP,MAAM,GAAGP,EAAE,CAACe,WAAH,CAAe,KAAKR,MAApB,CAAb;AACA,WAAKS,MAAL,GAAYT,MAAZ,CAFyB,CAGzB;AACA;AACD,KANa,CAOhB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACH,GArEI;AAsELU,EAAAA,aAtEK,yBAsESC,MAtET,EAsEiB;AAClBA,IAAAA,MAAM,CAACC,EAAP,CAAUnB,EAAE,CAACM,IAAH,CAAQc,SAAR,CAAkBC,WAA5B,EAAyC,KAAKC,UAA9C,EAA0D,IAA1D;AACAJ,IAAAA,MAAM,CAACC,EAAP,CAAUnB,EAAE,CAACM,IAAH,CAAQc,SAAR,CAAkBG,UAA5B,EAAwC,KAAKC,SAA7C,EAAwD,IAAxD;AACAN,IAAAA,MAAM,CAACC,EAAP,CAAUnB,EAAE,CAACM,IAAH,CAAQc,SAAR,CAAkBK,SAA5B,EAAuC,KAAKC,QAA5C,EAAsD,IAAtD;AACD,GA1EE,CA2EL;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7IK,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n            //测试item\r\n        content: {\r\n          default: null,\r\n          type: cc.Node\r\n        },\r\n\r\n      person: {\r\n        default: null,\r\n        type: cc.Prefab\r\n      },\r\n      //列表\r\n      test_scrollView: {\r\n        default: null,\r\n        type: cc.ScrollView\r\n      },\r\n      //翻页容器\r\n      test_pageView: {\r\n        default: null,\r\n        type: cc.PageView\r\n      },\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        for (let i = 0; i < 10; i++) {\r\n            let person = cc.instantiate(this.person);\r\n            this.conten=person\r\n            // person.parent = this.content;\r\n            // this.addTouchEvent(person);  //添加触摸事件\r\n          }\r\n        // this.value_set = [];\r\n        // // 如果你这里是排行榜，那么你就push排行榜的数据;\r\n        // for(var i = 1; i <= 100; i ++) {\r\n        //     this.value_set.push(i);\r\n        // }\r\n\r\n        // this.content = this.scroll_view.content;\r\n        // this.opt_item_set = [];\r\n        // for(var i = 0; i < this.PAGE_NUM * 3; i ++) {\r\n        //     var item = cc.instantiate(this.item_prefab);\r\n        //     this.content.addChild(item);\r\n        //     this.opt_item_set.push(item);\r\n        // }\r\n\r\n        // this.scroll_view.node.on(\"scroll-ended\", this.on_scroll_ended.bind(this), this);\r\n    },\r\n    addTouchEvent(node_1) {\r\n        node_1.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n        node_1.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n        node_1.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n      },\r\n    // start: function() {\r\n    //     this.start_y = this.content.y;\r\n    //     this.start_index = 0; // 当前我们24个Item加载的 100项数据里面的起始数据记录的索引;\r\n    //     this.load_record(this.start_index);\r\n    // },\r\n\r\n    // // 从这个索引开始，加载数据记录到我们的滚动列表里面的选项\r\n    // load_record: function(start_index) {\r\n    //     this.start_index = start_index;\r\n\r\n    //     for(var i = 0; i < this.PAGE_NUM * 3; i ++) {\r\n    //         var label = this.opt_item_set[i].getChildByName(\"src\").getComponent(cc.Label);\r\n    //         // 显示我们的记录;\r\n    //         label.string = this.value_set[start_index + i];\r\n    //     }\r\n    // },\r\n\r\n    // on_scroll_ended: function() {\r\n    //     this.scrollveiw_load_recode();\r\n    //     this.scroll_view.elastic = true;\r\n    // },\r\n\r\n    // scrollveiw_load_recode: function() {\r\n    //      // 向下加载了\r\n    //     if (this.start_index + this.PAGE_NUM * 3 < this.value_set.length &&\r\n    //         this.content.y >= this.start_y + this.PAGE_NUM * 2 * this.OPT_HEIGHT) { // 动态加载\r\n            \r\n    //         if (this.scroll_view._autoScrolling) { // 等待这个自动滚动结束以后再做加载\r\n    //             this.scroll_view.elastic = false; // 暂时关闭回弹效果\r\n    //             return;\r\n    //         }\r\n\r\n    //         var down_loaded = this.PAGE_NUM;\r\n    //         this.start_index += down_loaded;\r\n    //         if (this.start_index + this.PAGE_NUM * 3 > this.value_set.length) {\r\n    //             var out_len = this.start_index + this.PAGE_NUM * 3 - this.value_set.length;\r\n    //             down_loaded -= (out_len);\r\n    //             this.start_index -= (out_len);\r\n    //         }\r\n    //         this.load_record(this.start_index);\r\n\r\n    //         this.content.y -= (down_loaded * this.OPT_HEIGHT);\r\n    //         return;\r\n    //     }\r\n\r\n    //     // 向上加载\r\n    //     if (this.start_index > 0 && this.content.y <= this.start_y) {\r\n    //         if (this.scroll_view._autoScrolling) { // 等待这个自动滚动结束以后再做加载\r\n    //             this.scroll_view.elastic = false;\r\n    //             return;\r\n    //         }\r\n\r\n    //         var up_loaded = this.PAGE_NUM;\r\n    //         this.start_index -= up_loaded;\r\n    //         if (this.start_index < 0) {\r\n    //             up_loaded += this.start_index;\r\n    //             this.start_index = 0; \r\n    //         }\r\n    //         this.load_record(this.start_index);\r\n    //         this.content.y += (up_loaded * this.OPT_HEIGHT);\r\n    //     }\r\n    //     // end \r\n    // },\r\n    // // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n    //     this.scrollveiw_load_recode();\r\n    // },\r\n});\r\n"]}