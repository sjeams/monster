{"version":3,"sources":["assets\\Script\\login\\role.js"],"names":["HttpHelper","require","httpRequest","cc","Class","Component","properties","start","create_role","server","JSON","parse","sys","localStorage","getItem","params","loginid","id","name","httpPost","data","log","code","director","loadScene","setItem","stringify","userinfo"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,MAAD,CAAxB,EACA;AACA;;;AACA,IAAIC,WAAW,GAAI,IAAIF,UAAJ,EAAnB;AACAG,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,GAHP;AAqBL;AAEA;AAEAC,EAAAA,KAzBK,mBAyBI,CAER,CA3BI;AA6BL;AACAC,EAAAA,WA9BK,yBA8BQ;AACT,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWR,EAAE,CAACS,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,CAAX,CAAb,CADS,CAET;;AACI,QAAIC,MAAM,GAAG;AACT,iBAAWN,MAAM,CAACO,OADT;AAET,gBAAUP,MAAM,CAACQ,EAFR;AAGT,cAAQ,IAHC;AAIT,oBAAcR,MAAM,CAACS;AAJZ,KAAb,CAHK,CAST;;AACAhB,IAAAA,WAAW,CAACiB,QAAZ,CAAqB,+CAArB,EAAsEJ,MAAtE,EAA8E,UAAUK,IAAV,EAAgB;AAC1FjB,MAAAA,EAAE,CAACkB,GAAH,CAAOD,IAAP;;AACA,UAAGA,IAAI,CAACE,IAAL,IAAW,CAAd,EAAgB;AAAE;AACdnB,QAAAA,EAAE,CAACoB,QAAH,CAAYC,SAAZ,CAAsB,OAAtB;AACH,OAFD,MAEK;AACDrB,QAAAA,EAAE,CAACS,GAAH,CAAOC,YAAP,CAAoBY,OAApB,CAA4B,UAA5B,EAAwCf,IAAI,CAACgB,SAAL,CAAeN,IAAI,CAACA,IAAL,CAAUO,QAAzB,CAAxC;AACAxB,QAAAA,EAAE,CAACoB,QAAH,CAAYC,SAAZ,CAAsB,cAAtB;AACH;AAEJ,KATD;AAYH,GApDI,CAsDL;;AAtDK,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar HttpHelper = require(\"http\");\r\n// var fs = require('fs'); // 引入fs模块\r\n// var globaluserinfo = require(\"GlobaluserInfo\");\r\nlet httpRequest =  new HttpHelper();  \r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    //创建角色\r\n    create_role(){\r\n        var server = JSON.parse(cc.sys.localStorage.getItem('server'));\r\n        // 请求登录接口\r\n            var params = {\r\n                'loginid': server.loginid,\r\n                'server': server.id,\r\n                'name': '测试',\r\n                'servername': server.name,\r\n        };\r\n        // cc.log(server); \r\n        httpRequest.httpPost('http://www.monster.com/app/api-server/user-role', params ,function (data) {\r\n            cc.log(data); \r\n            if(data.code==0){ // 登录失败，或本地数据失效\r\n                cc.director.loadScene('login');\r\n            }else{\r\n                cc.sys.localStorage.setItem('userinfo', JSON.stringify(data.data.userinfo)); \r\n                cc.director.loadScene('model/dating');\r\n            }\r\n                  \r\n        });\r\n\r\n    \r\n    }\r\n\r\n    // update (dt) {},\r\n});\r\n"]}