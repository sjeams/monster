{"version":3,"sources":["assets\\Script\\login\\jspfile.js"],"names":["cc","Class","Component","properties","onLoad","writeable_path","jsb","fileUtils","getWritablePath","console","log","new_dir","isDirectoryExist","createDirectory","str_data","getStringFromFile","writeStringToFile","bin_array","getDataFromFile","writeDataToFile"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVQ,GAHP;AAgBL;AACAC,EAAAA,MAAM,EAAE,kBAAY;AAChB;AACA;AACA;AACA;AACA,QAAIC,cAAc,GAAGC,GAAG,CAACC,SAAJ,CAAcC,eAAd,EAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ,EANgB,CAShB;;AACA,QAAIM,OAAO,GAAGN,cAAc,GAAG,SAA/B,CAVgB,CAWhB;AACA;;AACA,QAAG,CAACC,GAAG,CAACC,SAAJ,CAAcK,gBAAd,CAA+BD,OAA/B,CAAJ,EAA6C;AACzCL,MAAAA,GAAG,CAACC,SAAJ,CAAcM,eAAd,CAA8BF,OAA9B;AACH,KAFD,MAGK;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,KAlBe,CAoBhB;AACA;;;AACA,QAAII,QAAQ,GAAGR,GAAG,CAACC,SAAJ,CAAcQ,iBAAd,CAAgCJ,OAAO,GAAG,oBAA1C,CAAf;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACAA,IAAAA,QAAQ,GAAG,wBAAX;AACAR,IAAAA,GAAG,CAACC,SAAJ,CAAcS,iBAAd,CAAgCF,QAAhC,EAA0CH,OAAO,GAAG,qBAApD,EAzBgB,CA0BhB;;AACA,QAAIM,SAAS,GAAGX,GAAG,CAACC,SAAJ,CAAcW,eAAd,CAA8BP,OAAO,GAAG,oBAAxC,CAAhB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYO,SAAS,CAAC,CAAD,CAArB,EAA0BA,SAAS,CAAC,CAAD,CAAnC,EA5BgB,CA4ByB;;AACzCX,IAAAA,GAAG,CAACC,SAAJ,CAAcY,eAAd,CAA8BF,SAA9B,EAAyCN,OAAO,GAAG,qBAAnD,EA7BgB,CA8BhB;AAEA;AACA;AACA;AACH,GApDI,CAsDL;AACA;AAEA;;AAzDK,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        // jsb.fileUtils获取全局的工具类的实例, cc.director;\r\n        // 如果是在电脑的模拟器上，就会是安装路径下模拟器的位置;\r\n        // 如果是手机上，那么就是手机OS为这个APP分配的可以读写的路径; \r\n        // jsb --> javascript binding --> jsb是不支持h5的\r\n        var writeable_path = jsb.fileUtils.getWritablePath();\r\n        console.log(writeable_path);\r\n\r\n\r\n        // 要在可写的路径先创建一个文件夹\r\n        var new_dir = writeable_path + \"new_dir\";\r\n        // 路径也可以是 外部存储的路径，只要你有可写外部存储的权限;\r\n        // getWritablePath这个路径下，会随着我们的程序卸载而删除,外部存储除非你自己删除，否者的话，卸载APP数据还在;\r\n        if(!jsb.fileUtils.isDirectoryExist(new_dir)) {\r\n            jsb.fileUtils.createDirectory(new_dir);\r\n        }\r\n        else {\r\n            console.log(\"dir is exist!!!\");\r\n        }\r\n        \r\n        // 读写文件我们分两种,文本文件, 二进制文件;\r\n        // (1)文本文件的读,返回的是一个string对象\r\n        var str_data = jsb.fileUtils.getStringFromFile(new_dir + \"/test_str_read.txt\"); \r\n        console.log(str_data);\r\n        str_data = \"hello test_write !!!!!\"\r\n        jsb.fileUtils.writeStringToFile(str_data, new_dir + \"/test_str_write.txt\");\r\n        // (2)二进制文件的读写, Uint8Array --> js对象\r\n        var bin_array = jsb.fileUtils.getDataFromFile(new_dir + \"/test_bin_read.png\");\r\n        console.log(bin_array[0], bin_array[1]); // 使用这个就能访问二进制的每一个字节数据;\r\n        jsb.fileUtils.writeDataToFile(bin_array, new_dir + \"/test_bin_write.png\");\r\n        // end \r\n\r\n        // 删除文件和文件夹\r\n        // jsb.fileUtils.removeFile(new_dir + \"/test_bin_write.png\"); \r\n        // jsb.fileUtils.removeDirectory(new_dir);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n\r\n"]}